<?php

/**
 * @file
 * Logging facilities for Petitions.
 */

/**
 * Logs a system event.
 *
 * @param string $name
 *   The name of the event you want to log.
 * @param string $type
 *   (optional) The type of metric to log--one of the following values
 *   corresponding to the
 *   @link https://github.com/etsy/statsd/blob/master/docs/metric_types.md StatsD Metric Types @endlink
 *   :
 *   - count: The corresponding value is a number by which to increment (or
 *     decrement, if negative) a simple counter.
 *   - gauge: The corresponding value is a single datum, which remains constant
 *     until explicitly changed.
 *   - set: The corresponding value is a value to add to a set of unique values.
 *   - time: The corresponding value is a duration in milliseconds.
 * @param int|null $value
 *   (optional) The numeric value you wish to log. Defaults to NULL.
 *
 * @see hook_petitionslog_event()
 */
function petitionslog_event($name, $type = 'count', $value = NULL) {
  // Assert valid event type.
  $valid_types = array('count', 'gauge', 'set', 'time');
  if (!in_array($type, $valid_types)) {
    watchdog('petitionslog', 'Invalid event type: %type.', array(
      '%type' => $type,
    ), WATCHDOG_WARNING);
    return;
  }

  // Assert valid event value.
  if (!is_null($value) && !is_int($value)) {
    watchdog('petitionslog', 'Invalid event value: %value.', array(
      '%value' => $value,
    ), WATCHDOG_WARNING);
    return;
  }

  module_invoke_all('petitionslog_event', $name, $type, $value);
}
